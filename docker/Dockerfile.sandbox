# Build stage for compiling dependencies
FROM python:3.10-slim AS builder

WORKDIR /build

# Install build dependencies
RUN apt-get update &&     apt-get install -y --no-install-recommends     gcc g++ build-essential python3-dev libc-dev &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*

# Copy the requirements file
COPY requirements.txt .

# Create virtual environment and install dependencies
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Install pip tools and dependencies
RUN pip install --no-cache-dir -U pip setuptools wheel && \
    pip install --no-cache-dir -r requirements.txt

# Final stage with minimal image
FROM python:3.10-slim

WORKDIR /app

# Install only runtime dependencies
RUN apt-get update &&     apt-get install -y --no-install-recommends     poppler-utils libgl1-mesa-glx libglib2.0-0 &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*

# Copy virtual environment from builder
COPY --from=builder /opt/venv /opt/venv

# Copy our loader scripts
COPY llm_loader.py install_compatible_llama.py docker_llm_loader.py ./

# Make scripts executable
RUN chmod +x llm_loader.py install_compatible_llama.py docker_llm_loader.py

# Make sure we use the virtualenv
ENV PATH="/opt/venv/bin:/usr/local/bin:/usr/bin:/bin"

# Environment variables for sandbox mode
ENV PYTHONUNBUFFERED=1
ENV TRANSFORMERS_OFFLINE=1
ENV HF_HUB_OFFLINE=1
ENV LANGCHAIN_TRACING=false
ENV SANDBOX_MODE=true
ENV PYTHONPATH=/app

# Define working directory
WORKDIR /app

ENTRYPOINT ["python3"]
